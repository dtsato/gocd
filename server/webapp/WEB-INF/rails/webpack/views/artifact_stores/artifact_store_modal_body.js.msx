/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m             = require('mithril');
const f             = require('helpers/form_helper');
const s             = require('string-plus');
const AngularPlugin = require('views/shared/angular_plugin');
const Spinner       = require('views/shared/spinner');

class ArtifactStoreModalBody {

  view(vnode) {
    if (!vnode.attrs.artifactStore()) {
      return (
        <div class="artifact-store-modal-body">
          <Spinner/>
        </div>
      );
    }
    selectPluginId.call(this, vnode);

    if (!this._pluginInfo) {
      const firstPluginInfo = vnode.attrs.pluginInfos.firstPluginInfo();
      this._pluginInfo      = firstPluginInfo;
      vnode.attrs.artifactStore().pluginId(firstPluginInfo.id());
    }

    let angularPlugin;
    if (this._pluginInfo) {
      angularPlugin = (
        <AngularPlugin pluginInfoSettings={this._pluginInfo.extensions()['artifact'].storeConfigSettings}
                       configuration={vnode.attrs.artifactStore().properties}
                       key={this._pluginInfo ? this._pluginInfo.id() : 'no-plugin'}/>);
    }
    return (<div class="artifact-store-modal-body">
      <f.row collapse="true">
        <div class='row' key="static-stuff">
          <f.column largeSize={4}>
            <f.input model={vnode.attrs.artifactStore()}
                     attrName="id"
                     validate
                     disabled={vnode.attrs.artifactStore().etag()}
                     label={<span class="required">Id</span>}
                     key="artifact-store-id"/>
          </f.column>
          <f.column size={6} largeSize={4} end>
            <f.select model={vnode.attrs.artifactStore()}
                      attrName="pluginId"
                      label="Plugin Id"
                      onModelUpdate={selectPluginId.bind(this, vnode)}
                      items={pluginInfoItems(vnode.attrs.pluginInfos)}/>
          </f.column>
        </div>
      </f.row>

      <div class="row collapse">
        {angularPlugin}
      </div>
    </div>);
  }
}

function pluginInfoItems(pluginInfos) {
  return pluginInfos.mapPluginInfos((pluginInfo) => {
    return {
      id:   pluginInfo.id(),
      text: s.isBlank(pluginInfo.about().name()) ? pluginInfo.id() : pluginInfo.about().name()
    };
  });
}

function selectPluginId(vnode) {
  this._pluginInfo = vnode.attrs.pluginInfos.findById(vnode.attrs.artifactStore().pluginId());
}

module.exports = ArtifactStoreModalBody;
